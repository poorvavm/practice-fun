<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<aop:aspectj-autoproxy />

	<bean name="triangle" class="vishSpringAOP.unit002.model.Triangle">
		<property name="name" value="Triangle Name" />
	</bean>

	<bean name="circle" class="vishSpringAOP.unit002.model.Circle">
		<property name="name" value="Circle Name" />
	</bean>

	<bean name="shapeService" class="vishSpringAOP.unit002.service.ShapeService"
		autowire="byName">
	</bean>

	<bean name="loggingAspect" class="vishSpringAOP.unit002.aspect.LoggingAspect" />

	<!-- everything coverend in unit001 can be done using xml as well . its 
		all same as the annotations defined in there -->
	<aop:config>
		<aop:aspect id="loggingAspect" ref="loggingAspect">
			<aop:pointcut id="allGetters" expression="execution(* get*())" />
			<aop:around pointcut-ref="allGetters" method="myAroundAdvice" />
		</aop:aspect>
	</aop:config>

	<!-- same as above but Alternative approach is below -->
	<!-- <aop:config> -->
	<!-- <aop:aspect id="loggingAspect" ref="loggingAspect"> -->
	<!-- <aop:around pointcut="execution(* get*())" method="myAroundAdvice" 
		/> -->
	<!-- </aop:aspect> -->
	<!-- </aop:config> -->


</beans>